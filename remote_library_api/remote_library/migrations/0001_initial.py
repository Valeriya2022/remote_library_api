# Generated by Django 3.2.12 on 2022-03-28 08:06

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import pathlib


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AudioCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GovernmentalResourceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VideoCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('author', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('source', models.CharField(max_length=1000)),
                ('url', models.URLField(null=True)),
                ('path', models.FilePathField(path=pathlib.PureWindowsPath('C:/Users/valeriya.nikiforova/Documents/UCA/Senior/FYP/remote_library_api/remote_library_api/remote_library/projectMaterials/videos'))),
                ('upload_date_time', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_visited_date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('publish_date', models.PositiveIntegerField(blank=True, null=True)),
                ('views_counter', models.PositiveIntegerField(default=0)),
                ('video_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='remote_library.videocategory')),
            ],
        ),
        migrations.CreateModel(
            name='GovernmentalResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=1000)),
                ('url', models.URLField(null=True)),
                ('update_date', models.DateField(auto_now=True)),
                ('path', models.FilePathField(allow_folders=True, max_length=200, path=pathlib.PureWindowsPath('C:/Users/valeriya.nikiforova/Documents/UCA/Senior/FYP/remote_library_api/remote_library_api/remote_library/projectMaterials/governmental_resources'))),
                ('views_counter', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='remote_library.governmentalresourcecategory')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('source', models.CharField(max_length=1000)),
                ('path', models.FilePathField(path=pathlib.PureWindowsPath('C:/Users/valeriya.nikiforova/Documents/UCA/Senior/FYP/remote_library_api/remote_library_api/remote_library/projectMaterials/books'))),
                ('url', models.URLField(null=True)),
                ('upload_date_time', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_visited_date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('publish_year', models.PositiveIntegerField(blank=True, null=True)),
                ('views_counter', models.PositiveIntegerField(default=0)),
                ('book_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='remote_library.bookcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('books', models.ManyToManyField(blank=True, related_name='authors', to='remote_library.Book')),
            ],
        ),
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('author', models.CharField(blank=True, max_length=1000, null=True)),
                ('transcript', models.TextField(blank=True, null=True)),
                ('source', models.CharField(max_length=1000)),
                ('url', models.URLField(null=True)),
                ('path', models.FilePathField(path=pathlib.PureWindowsPath('C:/Users/valeriya.nikiforova/Documents/UCA/Senior/FYP/remote_library_api/remote_library_api/remote_library/projectMaterials/audios'))),
                ('upload_date_time', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_visited_date_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('publish_date', models.PositiveIntegerField(blank=True, null=True)),
                ('views_counter', models.PositiveIntegerField(default=0)),
                ('audio_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='remote_library.audiocategory')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
